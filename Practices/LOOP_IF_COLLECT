*&---------------------------------------------------------------------*
*& Report Z_LOOPIFCOLLECT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT Z_LOOPIFCOLLECT.

TABLES:     SCARR, SPFLI, SFLIGHT.

TYPE-POOLS: slis.                                 "ALV Declarations

*Data Declaration
*----------------
TYPES: BEGIN OF t_sflight,
  carrid      TYPE sflight-carrid,
  connid      TYPE sflight-connid,
  seatsmax    TYPE sflight-seatsmax,
  seatsocc    TYPE sflight-seatsocc,
  paymentsum  TYPE sflight-paymentsum,
 END OF t_sflight.

DATA: it_sflight TYPE STANDARD TABLE OF t_sflight
          WITH NON-UNIQUE KEY carrid connid,                      "Table
      wa_sflight TYPE t_sflight.                                  "Row

DATA: it_collect TYPE STANDARD TABLE OF t_sflight INITIAL SIZE 0, "Table
      wa_collect TYPE t_sflight.                                  "Row

TYPES: BEGIN OF t_scarr,
  carrid      TYPE scarr-carrid,
  url         TYPE scarr-url,
 END OF t_scarr.

DATA: it_scarr TYPE STANDARD TABLE OF t_scarr INITIAL SIZE 0, "Table
      wa_scarr TYPE t_scarr.                                  "Row


TYPES: BEGIN OF t_spfli,
  carrid      TYPE spfli-carrid,
  connid      TYPE spfli-connid,
  airpfrom    TYPE spfli-airpfrom,
  countryfr   TYPE spfli-countryfr,
 END OF t_spfli.

DATA: it_spfli TYPE STANDARD TABLE OF t_spfli INITIAL SIZE 0, "Table
      wa_spfli TYPE t_spfli.                                  "Row


TYPES: BEGIN OF t_join,
  carrid        TYPE sflight-carrid,
  connid        TYPE sflight-connid,
  seatsmax      TYPE sflight-seatsmax,
  seatsocc      TYPE sflight-seatsocc,
  paymentsum    TYPE sflight-paymentsum,
  url           TYPE scarr-url,
  airpfrom      TYPE spfli-airpfrom,
  countryfr     TYPE spfli-countryfr,
 END OF t_join.

DATA: it_join TYPE STANDARD TABLE OF t_join INITIAL SIZE 0, "Table
      wa_join TYPE t_join.                                  "Row


*ALV data declarations
DATA: fieldcatalog TYPE slis_t_fieldcat_alv WITH HEADER LINE,   "Table + Row
      gd_tab_group TYPE slis_t_sp_group_alv,                    "table
      gd_layout    TYPE slis_layout_alv,                        "Row
      gd_repid     LIKE sy-repid.                               "Field


DATA : t TYPE slis_t_sp_group_alv .                             "Table
*************************************************************************
* SELECTION-SCREEN

SELECTION-SCREEN BEGIN OF BLOCK part1 WITH FRAME TITLE text-001.
* PARAMETERS p_carrid TYPE sflight-carrid.
SELECT-OPTIONS s_carrid FOR sflight-carrid.
SELECTION-SCREEN END OF BLOCK part1.

*Start-of-selection.
START-OF-SELECTION.

  PERFORM data_retrieval.
  PERFORM build_fieldcatalog.
  PERFORM build_layout.
  PERFORM display_alv_report.


*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCATALOG
*&---------------------------------------------------------------------*
*       Build Fieldcatalog for ALV Report
*----------------------------------------------------------------------*
FORM build_fieldcatalog.

  fieldcatalog-fieldname   = 'CARRID'.
  fieldcatalog-seltext_m   = 'CARRID'.
  fieldcatalog-col_pos     = 0.
  fieldcatalog-outputlen   = 10.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

  fieldcatalog-fieldname   = 'CONNID'.
  fieldcatalog-seltext_m   = 'CONNID'.
  fieldcatalog-col_pos     = 1.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

  fieldcatalog-fieldname   = 'SEATSMAX'.
  fieldcatalog-seltext_m   = 'SEATSMAX'.
  fieldcatalog-col_pos     = 2.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

  fieldcatalog-fieldname   = 'SEATSOCC'.
  fieldcatalog-seltext_m   = 'SEATSOCC'.
  fieldcatalog-col_pos     = 3.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

  fieldcatalog-fieldname   = 'PAYMENTSUM'.
  fieldcatalog-seltext_m   = 'PAYMENTSUM'.
  fieldcatalog-col_pos     = 4.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

  fieldcatalog-fieldname   = 'URL'.
  fieldcatalog-seltext_m   = 'URL'.
  fieldcatalog-col_pos     = 5.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

  fieldcatalog-fieldname   = 'AIRPFROM'.
  fieldcatalog-seltext_m   = 'AIRPFROM'.
  fieldcatalog-col_pos     = 6.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

  fieldcatalog-fieldname   = 'COUNTRYFR'.
  fieldcatalog-seltext_m   = 'COUNTRYFR'.
  fieldcatalog-col_pos     = 7.
  APPEND fieldcatalog TO fieldcatalog.
  CLEAR  fieldcatalog.

ENDFORM.                    " BUILD_FIELDCATALOG


*&---------------------------------------------------------------------*
*&      Form  BUILD_LAYOUT
*&---------------------------------------------------------------------*
*       Build layout for ALV grid report
*----------------------------------------------------------------------*
FORM build_layout.

  gd_layout-no_input          = 'X'.
  gd_layout-colwidth_optimize = 'X'.
  gd_layout-zebra = 'X'.
*  gd_layout-info_fieldname =      'LINE_COLOR'.
*  gd_layout-def_status = 'A'.

ENDFORM.                    " BUILD_LAYOUT


*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_REPORT
*&---------------------------------------------------------------------*
*       Display report using ALV grid
*----------------------------------------------------------------------*
FORM display_alv_report.
  gd_repid = sy-repid.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program = gd_repid
      is_layout          = gd_layout
      it_fieldcat        = fieldcatalog[]
      i_save             = 'X'
    TABLES
      t_outtab           = it_join
    EXCEPTIONS
      program_error      = 1
      OTHERS             = 2.
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.
ENDFORM.                    " DISPLAY_ALV_REPORT


*&---------------------------------------------------------------------*
*&      Form  DATA_RETRIEVAL
*&---------------------------------------------------------------------*
*       Retrieve data form EKPO table and populate itab it_ekko
*----------------------------------------------------------------------*
FORM data_retrieval.

  SELECT carrid, connid, seatsmax, seatsocc, paymentsum
    FROM sflight
    INTO TABLE @it_sflight
    WHERE carrid IN @s_carrid.

  SORT it_sflight BY carrid connid.

  LOOP AT it_sflight INTO wa_collect.
    COLLECT wa_collect INTO it_collect.
  ENDLOOP.

    SELECT carrid, url
    FROM scarr
    INTO TABLE @it_scarr
    WHERE carrid IN @s_carrid.

  SORT it_scarr BY carrid.

  SELECT carrid, connid, airpfrom, countryfr
    FROM spfli
    INTO TABLE @it_spfli
    WHERE carrid IN @s_carrid.

  SORT it_spfli BY carrid connid.


  LOOP AT it_collect INTO wa_collect.

    CLEAR wa_join.
    CLEAR wa_scarr.
    CLEAR wa_spfli.

    MOVE-CORRESPONDING wa_collect TO wa_join.
    READ TABLE it_scarr INTO wa_scarr WITH KEY carrid = wa_join-carrid.
    IF SY-SUBRC = 0.
      wa_join-url = wa_scarr-url.
    ENDIF.

    READ TABLE it_spfli INTO wa_spfli WITH KEY carrid = wa_join-carrid connid = wa_join-connid.    " AND 필요 없음
    IF SY-SUBRC = 0.
      wa_join-airpfrom = wa_spfli-airpfrom.
      wa_join-countryfr = wa_spfli-countryfr.
    ENDIF.

    APPEND wa_join TO it_join.

  ENDLOOP.
ENDFORM.                    " DATA_RETRIEVAL
